import time
import telebot
import buttons
import functions
from data import users, bot

remove = telebot.types.ReplyKeyboardRemove()

@bot.message_handler(commands=["start"])
#–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç
def start(message):
    functions.privetsvie(message)

@bot.message_handler()
#–∑–¥–µ—Å—å –ª–æ–≤–∏–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—Å—è
def centr_mes(message):
    remove = telebot.types.ReplyKeyboardRemove()
    if message.text == "üëÅ–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—èüëÅ":

        if message.chat.first_name in users: #–ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏–≥—Ä–æ–∫, –µ—Å—Ç—å –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ –∏–≥—Ä–æ–∫–æ–≤
            bot.send_message(message.chat.id, "–¢—ã —Å–º–æ—Ç—Ä–∏—à—å –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º –∏ –≤–∏–¥–∏—à—å —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤",
                             reply_markup=buttons.markup_1)
            if users[message.chat.first_name][2] != "None":
                opponent_name = users[message.chat.first_name][2]
                text = message.chat.first_name + " –ø–æ–∫–∏–Ω—É–ª –±–æ–π"
                users[opponent_name][2] = "None"
                users[message.chat.first_name][2] = "None"
                bot.send_message(users[opponent_name][0], text, reply_markup=buttons.markup_1)
            for user in users:
                if message.chat.first_name != user:
                    bot.send_message(message.chat.id, user, reply_markup=buttons.markup_2)
        else:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")
    elif message.text == "üö™–í—ã—Ö–æ–¥üö™":
        if users[message.chat.first_name][2] != "None":
            opponent_name = users[message.chat.first_name][2]
            text = message.chat.first_name + " –ø–æ–∫–∏–Ω—É–ª –±–æ–π"
            users[opponent_name][2] = "None"
            users[message.chat.first_name][2] = "None"
            bot.send_message(users[opponent_name][0], text, reply_markup=buttons.markup_1)
        bot.send_message(message.chat.id, "üöÄ–¢—ã —É–ª–µ—Ç–µ–ª –≤–æ—Å–≤–æ—è—Å–∏, —Ç–µ–ø–µ—Ä—å –Ω–∏–∫—Ç–æ –Ω–µ –¥–æ–±–µ—Ä–µ—Ç—Å—è –¥–æ —Ç–µ–±—è.üöÄ")
        remove = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ, –Ω–∞–∂–º–∏ –Ω–∞–∂–º–∏ /start", reply_markup=remove)
        try:
            users.pop(message.chat.first_name)
            leaving_text = message.chat.first_name + " –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å!"
            for user in users:
                if user != "ü§ñValeraBotü§ñ":
                    bot.send_message(users[user][0], leaving_text)
        except:
            pass
    elif message.text == "üëä–ö–∞–º–µ–Ω—åüëä" or message.text == "‚úå–ù–æ–∂–Ω–∏—Ü—ã‚úå" or message.text == "‚úã–ë—É–º–∞–≥–∞‚úã":

        if message.chat.first_name in users:
            bot.send_message(message.chat.id, "–ñ–¥–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!", reply_markup=remove)
            functions.rsp_game(message)
        else:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!", reply_markup=remove)

    else:
        bot.send_message(message.chat.id, "–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å.", reply_markup=remove)


@bot.callback_query_handler(func=lambda call: True)
#—Ç—É—Ç –æ—Ç–≤–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ–≥–æ–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫

def callback_inline(call):
    # –µ—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–≤—ã–∑–≤–∞—Ç—å –Ω–∞ –±–æ–π"
    if call.data == 'fightwith':
        if call.message.json["chat"]['first_name'] in users:
            if call.message.json["text"] == "ü§ñValeraBotü§ñ":
                bot.send_message(call.from_user.id, "–û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±–æ–π, –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=buttons.markup_3)
                users[call.message.json["chat"]['first_name']][2] = "ü§ñValeraBotü§ñ"

            elif users[call.message.json["text"]][2] == "None":
                fight_await = "–¢—ã –≤—ã–∑–≤–∞–ª –Ω–∞ –±–æ–π " + call.message.json["text"]
                bot.send_message(call.from_user.id, fight_await)
                time.sleep(0.5)
                bot.send_message(call.from_user.id, "–ñ–¥–µ–º –µ–≥–æ –æ—Ç–≤–µ—Ç–∞!")
                User2 = call.message.json["text"]
                fight_request = call.message.json["chat"]['first_name'] + " –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–µ–±—è –Ω–∞ –±–æ–π!"
                bot.send_message(users[User2][0], fight_request, reply_markup=buttons.markup_4)

            elif users[call.message.json["text"]][2] != "None":
                bot.send_message(call.from_user.id, "–û–Ω —É–∂–µ –±—å–µ—Ç—Å—è, –≤—ã–∑–æ–≤–∏ –¥—Ä—É–≥–æ–≥–æ!")

        else:
            bot.send_message(call.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")

    elif call.data == "fightYES" or call.data == "fightNO":
        #–ø—Ä–∏–Ω—è–ª –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω—è–ª –±–æ–π
        if call.message.json["chat"]['first_name'] in users:
            #–≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–º—è –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –∏–º—è –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–≥–æ –±–æ–π
            opponent_name = call.message.json["text"].split()[0]
            user_name = call.message.json["chat"]['first_name']

            if call.data == "fightYES":
                bot.edit_message_reply_markup(chat_id=call.from_user.id, message_id=call.message.message_id,
                                              reply_markup=None)

                # –≤ —Å–ª–æ–≤–∞—Ä–µ users –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –æ–ø–æ–Ω–µ–Ω—Ç–æ–≤
                users[user_name][2] = opponent_name
                users[opponent_name][2] = user_name
                # –∏ –∑–∞–Ω—É–ª—è–µ–º –∏–º –≤—ã–±–æ—Ä –ö–ù–ë –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                users[user_name][1] = 0
                users[opponent_name][1] = 0

                bot.send_message(call.from_user.id, "–ù—É –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=buttons.markup_3)
                bot.send_message(users[opponent_name][0], "–û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±–æ–π, –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=buttons.markup_3)
                time.sleep(0.5)

            if call.data == "fightNO":
                time.sleep(0.5)
                bot.send_message(call.from_user.id, "üòº–ù—É –∏ –Ω–µ –Ω–∞–¥–æüòº")
                bot.send_message(users[User1][0], "üê£–û–Ω —Å—Ç—Ä—É—Å–∏–ª, –≤—ã–∑–æ–≤–∏ –¥—Ä—É–≥–æ–≥–æüê£")
        else:
            bot.send_message(call.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")


bot.polling(none_stop=True)
