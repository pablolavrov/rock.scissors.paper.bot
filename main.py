import time
import telebot
import buttons
import functions
from data import users, bot

remove = telebot.types.ReplyKeyboardRemove()

@bot.message_handler(commands=["start"])
#–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç
def start(message):
    functions.privetsvie(message)

@bot.message_handler()
#–∑–¥–µ—Å—å –ª–æ–≤–∏–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—Å—è
def centr_mes(message):
    if message.text == "üëÅ–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—èüëÅ":
        if message.chat.first_name in users: #–ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏–≥—Ä–æ–∫, –µ—Å—Ç—å –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ –∏–≥—Ä–æ–∫–æ–≤
            for user in users:
                if message.chat.first_name != user:
                    bot.send_message(message.chat.id, user, reply_markup=buttons.markup_2)
        else:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")
    elif message.text == "üö™–í—ã—Ö–æ–¥üö™":
        bot.send_message(message.chat.id, "üöÄ–¢—ã —É–ª–µ—Ç–µ–ª –≤–æ—Å–≤–æ—è—Å–∏, —Ç–µ–ø–µ—Ä—å –Ω–∏–∫—Ç–æ –Ω–µ –¥–æ–±–µ—Ä–µ—Ç—Å—è –¥–æ —Ç–µ–±—è.üöÄ")
        remove = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ, –Ω–∞–∂–º–∏ –Ω–∞–∂–º–∏ /start", reply_markup=remove)
        try:
            users.pop(message.chat.first_name)
            leaving_text = message.chat.first_name + " –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å!"
            for user in users:
                if user != "ü§ñValeraBotü§ñ":
                    bot.send_message(users[user][0], leaving_text)
        except:
            pass
    else:
        bot.send_message(message.chat.id, "–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å.")


@bot.callback_query_handler(func=lambda call: True)
#—Ç—É—Ç –æ—Ç–≤–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ–≥–æ–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
def callback_inline(call):
    if call.data == 'fightwith': #–µ—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–≤—ã–∑–≤–∞—Ç—å –Ω–∞ –±–æ–π"
        if call.message.json["chat"]['first_name'] in users:
            fight_await = "–¢—ã –≤—ã–∑–≤–∞–ª –Ω–∞ –±–æ–π " + call.message.json["text"]
            bot.send_message(call.from_user.id, fight_await)
            time.sleep(0.5)

            if call.message.json["text"] == "ü§ñValeraBotü§ñ":
                markup_3 = buttons.gameBut(str("ü§ñValeraBotü§ñ"))
                bot.send_message(call.from_user.id, "–û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±–æ–π, –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=markup_3)
            else:
                bot.send_message(call.from_user.id, "–ñ–¥–µ–º –µ–≥–æ –æ—Ç–≤–µ—Ç–∞!")
                User2 = call.message.json["text"]
                fight_request = call.message.json["chat"]['first_name'] + " –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–µ–±—è –Ω–∞ –±–æ–π!"
                bot.send_message(users[User2][0], fight_request, reply_markup=buttons.markup_4)
        else:
            bot.send_message(call.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")

    elif call.data == "fightYES" or call.data == "fightNO": #–ø—Ä–∏–Ω—è–ª –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω—è–ª –±–æ–π
        if call.message.json["chat"]['first_name'] in users:
            User1 = call.message.json["text"].split()[0]
            if call.data == "fightYES":
                markup_5 = buttons.gameBut(str(User1))
                bot.edit_message_reply_markup(chat_id=call.from_user.id, message_id=call.message.message_id,
                                              reply_markup=None)
                bot.send_message(call.from_user.id, "–ù—É –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=markup_5)
                time.sleep(0.5)

                markup_6 = buttons.gameBut(str(call.message.json["chat"]["first_name"]))
                bot.send_message(users[User1][0], "–û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±–æ–π, –ø–æ–≥–Ω–∞–ª–∏!" , reply_markup=markup_6)
                time.sleep(0.5)

            if call.data == "fightNO":
                time.sleep(0.5)
                bot.send_message(call.from_user.id, "üòº–ù—É –∏ –Ω–µ –Ω–∞–¥–æüòº")
                bot.send_message(users[User1][0], "üê£–û–Ω —Å—Ç—Ä—É—Å–∏–ª, –≤—ã–∑–æ–≤–∏ –¥—Ä—É–≥–æ–≥–æüê£")
        else:
            bot.send_message(call.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")
    elif call.data.__contains__("Rock") or call.data.__contains__("Scissors") or call.data.__contains__("Paper"):
        #—Ç—É—Ç –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞
        if call.message.json["chat"]['first_name'] in users:
            functions.rsp_game(call)
        else:
            bot.send_message(call.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è, –∂–º–∏ /start –±—Ä–æ–¥—è–≥–∞!")

bot.polling(none_stop=True)
